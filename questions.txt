
- What are the key features of the application? Are these clearly separated into
  their own files, classes, and/or modules?
        The key fatures of this application are the histogram sampling element, 
        the word count element, the text being used, and the actual application.
        These main components are all seperated into their own modules.
- Are the names of files, modules, functions, and variables appropriate and 
  accurate? Would a new programmer be able to understand the names without too 
  much contextual knowledge?
        After going through the entirety of my code, I have tried as best as I can
        make the names of each element in my code be as clear and understandable as possible. 
        Hopefully because of this another programmer would be able to understand the code
        easily and without too much context.
- What are the scopes of variables and are they appropriate for their use case? If there are 
  global variables, why are they needed?
        After implementing the listogram and dictogram classes into my code, the scope of each 
        variable should be greatly improved. This should aid in creating a more object oriented
        progam.
- Are the functions small and clearly specified, with as few side effects as possible?
        I do not have enough coding knowledge to be able to answer that with confidence.
- Are there functions that could be better organized in an Object-Oriented Programming style by
  defining them as methods of a class?
        Yes, the histogram functions (in sample.py) will be reorganized into Object-Oriented Programming
        style to make it better organized.
- Can files be used as both modules and as scripts?
        Yes, files in this program can often be both. For example, the sample.py file can currently be
        executed by itself, or it can be imported into app.py and run there.
- Do modules all depend on each other or can they be used independently?
        That often depends on how intertwined they are. If the modules are too intertwined, meaning they
        require too many elements or variables from other modules, it may be difficult to use them 
        independently. However, if they are not too intertwined, they can easily be tweeked in order to 
        use them independently.